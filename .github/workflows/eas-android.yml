name: EAS Android
on:
  workflow_dispatch: {}

concurrency:
  group: eas-android-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-android:
    if: ${{ github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node (SDK53 recomienda Node 20+)
        uses: actions/setup-node@v4
        with:
          node-version: 20
          # sin "cache: npm" si no hay lockfile en el repo

      - name: Mostrar versiones
        run: |
          node -v
          npm -v

      # ðŸ”§ Hotfix: forzar versiones vÃ¡lidas de health-connect para evitar ETARGET
      - name: Hotfix deps (expo-health-connect / rn-health-connect)
        run: |
          node -e "const fs=require('fs');const p=require('./package.json');
            p.dependencies=p.dependencies||{};
            p.dependencies['expo-health-connect']='^0.1.1';
            p.dependencies['react-native-health-connect']='^3.3.3';
            fs.writeFileSync('package.json', JSON.stringify(p,null,2));"
          cat package.json | grep -E '"expo-health-connect"|"react-native-health-connect"' || true

      - name: Instalar dependencias
        run: |
          if [ -f package-lock.json ] || [ -f npm-shrinkwrap.json ]; then
            echo "Lockfile encontrado -> npm ci"
            npm ci
          else
            echo "Sin lockfile -> npm i (fallback)"
            npm i --no-audit --no-fund --legacy-peer-deps
          fi

      - name: EAS CLI version
        run: npx --yes eas-cli@latest --version

      - name: Preparar keystore
        shell: bash
        run: |
          set -euo pipefail
          echo "$ANDROID_KEYSTORE_BASE64" | base64 -d > keystore.jks
          ls -l keystore.jks
        env:
          ANDROID_KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}

      - name: Crear credentials.json (para submit opcional)
        shell: bash
        run: |
          set -euo pipefail
          node -e 'const fs=require("fs");const c={android:{keystore:{keystorePath:"keystore.jks",keystorePassword:process.env.ANDROID_KEYSTORE_PASSWORD,keyAlias:process.env.ANDROID_KEY_ALIAS,keyPassword:process.env.ANDROID_KEY_PASSWORD}}};fs.writeFileSync("credentials.json",JSON.stringify(c,null,2));'
          ls -l credentials.json
        env:
          ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
          ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}

      - name: Build Android (production)
        env:
          EAS_NON_INTERACTIVE: "1"
          EXPO_TOKEN: ${{ secrets.EAS_TOKEN }}
          EAS_ACCESS_TOKEN: ${{ secrets.EAS_TOKEN }}
          NODE_ENV: production
        run: npx --yes eas-cli@latest build --platform android --profile production --non-interactive
